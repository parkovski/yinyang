set(SOURCES
  main.c
  theme-changed.c
)

add_executable(yinyang ${SOURCES})

if(UNIX)
  target_sources(yinyang PRIVATE exec-unix.c)

  if(APPLE)
    target_sources(yinyang PRIVATE listen-macos.m)
    target_link_libraries(yinyang "-framework AppKit")
  else()
    target_sources(yinyang PRIVATE get-env.c)
    if (NOT YY_NO_KDE)
      enable_language(CXX)
      set(CMAKE_CXX_STANDARD 17)
      set(CMAKE_CXX_STANDARD_REQUIRED ON)
      set(CMAKE_CXX_EXTENSIONS OFF)
      find_package(KF5Config REQUIRED)
      find_package(Qt5DBus REQUIRED)
      target_sources(yinyang PRIVATE listen-kde.cpp)
      target_link_libraries(yinyang PRIVATE KF5::ConfigCore Qt5::DBus)
      target_compile_definitions(yinyang PRIVATE YY_HAS_KDE)
      set_target_properties(yinyang PROPERTIES AUTOMOC ON)
      message(STATUS "KDE environment enabled")
    endif()
    if (NOT YY_NO_GTK)
      include(FindPkgConfig)
      pkg_check_modules(GTK REQUIRED IMPORTED_TARGET GLOBAL gtk4)
      target_sources(yinyang PRIVATE listen-gtk.c)
      target_link_libraries(yinyang PRIVATE PkgConfig::GTK)
      target_compile_definitions(yinyang PRIVATE YY_HAS_GTK)
      message(STATUS "GTK environment enabled")
    endif()
  endif()
elseif(WIN32)
  target_sources(yinyang PRIVATE exec-win32.c listen-win32.c)
endif()
